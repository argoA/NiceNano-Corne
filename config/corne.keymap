/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

&mt {
    flavor = "tap-preferred";
    require-prior-idle-ms = <150>;
    quick-tap-ms = <175>;
};

/ {
    combos { compatible = "zmk,combos"; };

    keymap {
        compatible = "zmk,keymap";

        QWERTY {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB     &kp Q           &kp W           &kp E        &kp R             &kp T      &kp Y    &kp U              &kp I        &kp O            &kp P                &kp BSPC
&kp ESCAPE  &mt LEFT_GUI A  &mt LEFT_ALT S  &mt LCTRL D  &mt LEFT_SHIFT F  &kp G      &kp H    &mt RIGHT_SHIFT J  &mt RCTRL K  &mt RIGHT_ALT L  &mt RIGHT_GUI SEMI   &kp SQT
&trans      &kp Z           &kp X           &kp C        &kp V             &kp B      &kp N    &kp M              &kp COMMA    &kp DOT          &mt BACKSLASH SLASH  &trans
                                            &trans       &sl 2             &kp SPACE  &kp RET  &sl 1              &trans
            >;
        };

        right_thumb {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |BOTH | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &trans          &trans              &trans                      &trans                            &trans     &trans    &trans         &trans     &trans       &trans  &kp DEL
&trans  &mt LGUI MINUS  &mt LEFT_ALT EQUAL  &mt LCTRL LEFT_PARENTHESIS  &mt LEFT_SHIFT RIGHT_PARENTHESIS  &trans     &kp LEFT  &kp DOWN       &kp UP     &kp RIGHT    &trans  &trans
&trans  &trans          &kp PERCENT         &kp LEFT_BRACKET            &kp RIGHT_BRACKET                 &trans     &kp TAB   &kp PAGE_DOWN  &kp PG_UP  &kp LS(TAB)  &trans  &trans
                                            &kp LGUI                    &sl 3                             &kp SPACE  &kp RET   &trans         &kp RALT
            >;
        };

        left_thumb {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |BOTH | ALT |

            bindings = <
&kp GRAVE  &trans        &trans        &trans        &trans          &trans     &trans   &kp ASTERISK  &kp N7        &kp N8  &kp N9  &kp BSPC
&trans     &kp LEFT_GUI  &kp LALT      &sk LCTRL     &sk LEFT_SHIFT  &trans     &trans   &kp PLUS      &kp N4        &kp N5  &kp N6  &kp FSLH
&trans     &kp N1        &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4    &kp N5     &trans   &kp MINUS     &kp NUMBER_1  &kp N2  &kp N3  &kp PERIOD
                                       &trans        &trans          &kp SPACE  &kp RET  &sl 3         &kp N0
            >;
        };

        both_thumbs {
            bindings = <
&trans  &kp F1  &kp F2  &kp F3  &kp F4         &kp F5  &kp F6      &kp F7             &kp F8           &kp F9          &kp F10  &trans
&trans  &trans  &trans  &trans  &kp CAPSLOCK   &trans  &trans      &trans             &trans           &trans          &trans   &trans
&trans  &trans  &trans  &trans  &kp LG(GRAVE)  &trans  &kp C_NEXT  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_PREVIOUS  &trans   &trans
                        &trans  &trans         &trans  &trans      &trans             &trans
            >;
        };
    };
};
